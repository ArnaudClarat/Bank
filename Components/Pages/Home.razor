@page "/"
@using Bank.Components.Models

<PageTitle>Home</PageTitle>

<div class="container">
    @foreach (var log in Logs)
    {
        <p>@log</p>
    }
</div>

@code {
    private Person Arnaud = new("Arnaud", "Clarat", new DateTime(1997, 7, 14));
    private CurrentAccount Account;
    private List<string> Logs = new();

    protected override void OnInitialized()
    {
        try
        {
            // Initialise le compte
            Account = new CurrentAccount("BE68 5390 0754 7034", Arnaud, 157.25, 1000);
            Account.NegativeBalanceEvent += HandleNegativeBalance;

            // Simule les opérations
            Log($"Initial balance: {Account.Balance}€");
            Account.Withdraw(3.65);
            Log($"Withdrew 3.65€. Balance: {Account.Balance}€");
            Account.Withdraw(251.32);
            Log($"Withdrew 251.32€. Balance: {Account.Balance}€");
            Account.ApplyInterests();
            Log($"Applied interests. Balance: {Account.Balance}€");
            // Account.Withdraw(8457); Échec attendu
            Account.Withdraw(56.56);
            Log($"Withdrew 56.56€. Balance: {Account.Balance}€");
            Account.Deposit(3254.56);
            Log($"Deposited 3254.56€. Balance: {Account.Balance}€");
            Account.ApplyInterests();
            Log($"Applied interests. Balance: {Account.Balance}€");
        }
        catch (Exception e)
        {
            Log(e.Message);
        }
    }

    private void HandleNegativeBalance(object sender)
    {
        var account = sender as CurrentAccount;
        if (account != null)
        {
            Logs.Add($"[ALERT] Negative balance for account {account.Number}.");
        }
    }

    private void Log(string message)
    {
        Logs.Add(message);
    }
}